"use strict";var swiper=new Swiper(".popular__slider",{loop:!0,navigation:{nextEl:".popular__slider-btn-next",prevEl:".popular__slider-btn-prev"},a11y:{nextSlideMessage:"Вправо"},scrollbar:{el:".popular__slider-scrollbar",draggable:!0},breakpoints:{1e3:{slidesPerView:4,slidesPerGroup:4,spaceBetween:29},320:{slidesPerView:1,slidesPerGroup:1,spaceBetween:10}}}),popup=document.getElementById("popup"),popupBox=document.getElementById("popup-box"),popupClose=document.getElementById("popup-close");function init(){var e=new ymaps.Map("map",{center:[53.676347909629094,23.828005242050153],zoom:17}),o=new ymaps.Placemark([53.67669826968073,23.830183195770243],{},{iconLayout:"default#image",iconImageHref:"./img/placemark.svg",iconImageSize:[54,70],iconImageOffset:[-3,-42]});e.geoObjects.add(o),e.controls.remove("zoomControl"),e.controls.remove("rulerControl")}document.getElementById("application").addEventListener("submit",(function(e){e.preventDefault(),popup.classList.add("popup-active")})),popupClose.addEventListener("click",(function(){return popup.classList.remove("popup-active")})),document.body.addEventListener("click",(function(e){popup.classList.contains("popup-active")&&!popupBox.contains(e.target)&&popup.classList.remove("popup-active")})),window.addEventListener("resize",(function(e){console.log(e.currentTarget.innerWidth),e.currentTarget.innerWidth<376&&(document.getElementById("logo").src="img/logo-min.svg")})),ymaps.ready(init);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
