"use strict";var popup=document.getElementById("popup"),popupBox=document.getElementById("popup-box"),popupClose=document.getElementById("popup-close");function changeLogo(){var e=document.getElementById("logo");window.screen.width<=700?e.src="img/logo-min.svg":e.src="img/logo.svg"}document.getElementById("application").addEventListener("submit",(function(e){e.preventDefault(),popup.classList.add("active")})),popupClose.addEventListener("click",(function(){return popup.classList.remove("active")})),document.body.addEventListener("click",(function(e){popup.classList.contains("active")&&!popupBox.contains(e.target)&&popup.classList.remove("active")})),window.addEventListener("resize",changeLogo),window.addEventListener("load",changeLogo);var menu=document.getElementById("menu"),openMenu=document.getElementById("menu-open"),closeMenu=document.getElementById("menu-close");openMenu.addEventListener("click",(function(){menu.classList.add("active")})),closeMenu.addEventListener("click",(function(){menu.classList.remove("active")})),document.body.addEventListener("click",(function(e){openMenu.contains(e.target)||menu.contains(e.target)||menu.classList.remove("active")}));var swiperCatalog=new Swiper(".catalog__slider",{loop:!0,navigation:{nextEl:".catalog__slider-btn-next",prevEl:".catalog__slider-btn-prev"},a11y:{prevSlideMessage:"Назад",nextSlideMessage:"Вперёд"},speed:1e3}),swiperPopular=new Swiper(".popular__slider",{loop:!0,navigation:{nextEl:".popular__slider-btn-next",prevEl:".popular__slider-btn-prev"},a11y:{prevSlideMessage:"Назад",nextSlideMessage:"Вперёд"},scrollbar:{el:".popular__slider-scrollbar",draggable:!0},speed:1e3,breakpoints:{1500:{slidesPerView:4,slidesPerGroup:4,spaceBetween:29},1200:{slidesPerView:3,slidesPerGroup:3,spaceBetween:20},700:{slidesPerView:2,slidesPerGroup:2,spaceBetween:20},320:{slidesPerView:"auto",slidesPerGroup:1,spaceBetween:10}}});function init(){var e=new ymaps.Map("map",{center:[53.676347909629094,23.828005242050153],zoom:17}),t=new ymaps.Placemark([53.67669826968073,23.830183195770243],{},{iconLayout:"default#image",iconImageHref:"./img/placemark.svg",iconImageSize:[54,70],iconImageOffset:[-3,-42]});e.geoObjects.add(t),e.controls.remove("zoomControl"),e.controls.remove("rulerControl")}document.querySelectorAll(".catalog__label").forEach((function(e){var t=function(e){return document.querySelector("[data-descLabel='".concat(e,"']"))},n="";e.addEventListener("click",(function(e){n=e.currentTarget.dataset.label,t(n).classList.toggle("catalog__label-box-active")})),document.body.addEventListener("click",(function(e){!n||function(e){return document.querySelector("[data-label='".concat(e,"']"))}(n).contains(e.target)||t(n).contains(e.target)||t(n).classList.remove("catalog__label-box-active")}))})),ymaps.ready(init);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
